{"version":3,"sources":["FeedbacksOptions.js","Statistics.jsx","Feedbacks.jsx","App.js","index.js","Feedbacks.module.css"],"names":["FeedbackOptions","this","props","handleGood","handleNeutral","handleBad","onClick","Component","Statistics","good","neutral","bad","total","positivePercentage","Section","state","handleGoodFeedback","setState","prevState","countTotalFeedback","handleNeutralFeedback","handleBadFeedback","countPositiveFeedbackPercentage","Math","round","className","styles","text","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"oLAEqBA,E,4JACjB,WACI,MAA+CC,KAAKC,MAA7CC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,cAAeC,EAAlC,EAAkCA,UAClC,OACI,gCACQ,wBAAQC,QAASH,EAAjB,kBACA,wBAAQG,QAASF,EAAjB,qBACA,wBAAQE,QAASD,EAAjB,wB,GAPyBE,aCAxBC,E,4JACjB,WACI,MAA0DP,KAAKC,MAAvDO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,8BACe,IAAVD,EAAc,sDACX,gCACA,4CACA,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,sDAAyBC,EAAzB,gB,GAZoBN,a,gBCGnBO,E,4MACjBC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,EAGxBG,mBAAqB,WACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC1BT,KAAMS,EAAUT,KAAO,MAE3B,EAAKU,sB,EAGTC,sBAAwB,WACpB,EAAKH,UAAS,SAACC,GAAD,MAAgB,CAC1BR,QAASQ,EAAUR,QAAU,MAEjC,EAAKS,sB,EAGTE,kBAAoB,WAChB,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC1BP,IAAKO,EAAUP,IAAM,MAEzB,EAAKQ,sB,EAGTA,mBAAqB,WACjB,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAC1BN,MAAOM,EAAUN,MAAQ,MAE7B,EAAKU,mC,EAGTA,gCAAkC,WAC9B,EAAKL,SAAS,CACVJ,mBAAoBU,KAAKC,MAAwB,IAAlB,EAAKT,MAAMN,KAAY,EAAKM,MAAMH,U,4CAIzE,WAEI,OACI,8BACE,sBAAKa,UAAWC,IAAOC,KAAvB,UACA,uDACE,cAAC,EAAD,CACAxB,WAAYF,KAAKe,mBACjBZ,cAAeH,KAAKmB,sBACpBf,UAAWJ,KAAKoB,oBAEhB,cAAC,EAAD,CACAZ,KAAMR,KAAKc,MAAMN,KACjBC,QAAST,KAAKc,MAAML,QACpBC,IAAKV,KAAKc,MAAMJ,IAChBC,MAAOX,KAAKc,MAAMH,MAClBC,mBAAoBZ,KAAKc,MAAMF,8B,GA3DVN,aCFtB,SAASqB,IACpB,OACI,8BACI,cAAC,EAAD,MCFZC,IAASC,OAAO,cAACF,EAAD,IAAQG,SAASC,eAAe,U,kBCHhDC,EAAOC,QAAU,CAAC,KAAO,2B","file":"static/js/main.41d15442.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FeedbackOptions extends Component {\r\n    render() {\r\n        const {handleGood, handleNeutral, handleBad} = this.props;\r\n        return (\r\n            <div>\r\n                    <button onClick={handleGood}>Good</button>\r\n                    <button onClick={handleNeutral}>Neutral</button>\r\n                    <button onClick={handleBad}>Bad</button>\r\n                </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Statistics extends Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        return (\r\n            <div>\r\n                {total === 0 ? <p>No feedback was given</p> : (\r\n                    <div>\r\n                    <h2>Statistics</h2>\r\n                    <p>Good: {good}</p>\r\n                    <p>Neutral: {neutral}</p>\r\n                    <p>Bad: {bad}</p>\r\n                    <p>Total: {total}</p>\r\n                    <p>Positive Percenrage: {positivePercentage}%</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport FeedbacksOptions from './FeedbacksOptions';\r\nimport Statistics from './Statistics';\r\nimport styles from './Feedbacks.module.css';\r\n\r\nexport default class Section extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        total: 0,\r\n        positivePercentage: 0,\r\n    }\r\n\r\n    handleGoodFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            good: prevState.good + 1,\r\n        }));\r\n        this.countTotalFeedback()\r\n    };\r\n\r\n    handleNeutralFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            neutral: prevState.neutral + 1,\r\n        }));\r\n        this.countTotalFeedback()\r\n    };\r\n\r\n    handleBadFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            bad: prevState.bad + 1,\r\n        }));\r\n        this.countTotalFeedback()\r\n    };\r\n\r\n    countTotalFeedback = () => {\r\n        this.setState((prevState) => ({\r\n            total: prevState.total + 1,\r\n        }));\r\n        this.countPositiveFeedbackPercentage()\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        this.setState({\r\n            positivePercentage: Math.round(this.state.good * 100/ this.state.total)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n              <div className={styles.text}>\r\n              <h1>Please leave feedback</h1>\r\n                <FeedbacksOptions \r\n                handleGood={this.handleGoodFeedback} \r\n                handleNeutral={this.handleNeutralFeedback} \r\n                handleBad={this.handleBadFeedback}/>\r\n\r\n                <Statistics \r\n                good={this.state.good} \r\n                neutral={this.state.neutral} \r\n                bad={this.state.bad} \r\n                total={this.state.total} \r\n                positivePercentage={this.state.positivePercentage} />\r\n              </div>\r\n          \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Feedbacks from './Feedbacks';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <Feedbacks/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Feedbacks_text__3rd4d\"};"],"sourceRoot":""}